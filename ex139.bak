;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname ex139) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
; A List-of-amounts is one of: 
; – '()
; – (cons PositiveNumber List-of-amounts)
(check-expect (sum '()) 0)
(check-expect (sum (cons 1 '())) 1)
(check-expect (sum (cons 2 (cons 1 '()))) 3)
(check-expect (sum (cons 3 (cons 2 (cons 1 '())))) 6)
(define (sum loa)
  (cond
    [(empty? loa) 0]
    [else (+ (first loa)
             (sum (rest loa)))]))

; List-of-numbers -> Boolean
; given a list of numbers,
; returns true if they are all positive,
; false otherwise
(check-expect (pos? '()) #true)
(check-expect (pos? (cons 1 '())) #true)
(check-expect (pos? (cons -1 '())) #false)
(check-expect (pos? (cons 1 (cons 1 '()))) #true)
(check-expect (pos? (cons -1 (cons 1 '()))) #false)
(check-expect (pos? (cons 1 (cons -1 '()))) #false)
(define (pos? lon)
  (cond
    [(empty? lon) #true]
    [(< (first lon) 0) #false]
    [else (pos? (rest lon))]))

; List-of-Numbers -> Number or Error
; Takes a list-of-numbers and returns their sum
; if they are a list-of-amounts, otherwise returns an error
(check-error 